# -*- coding: utf-8 -*-
"""mush_model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_1eyW3-6GbB3B8zXXgnXRVnDSyGCe7pR
"""

import numpy as np
import os
import matplotlib.pyplot as plt
from sklearn import preprocessing
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import tree
from sklearn.metrics import confusion_matrix

file_path = "/content/mushrooms.csv"
data = pd.read_csv(file_path)

le = LabelEncoder()

for i in data.columns:
    data[i] = le.fit_transform(data[i])

y = data["class"]
x = data.drop(["class","gill-attachment","bruises"], axis = 1)

xv = x.values
yv = y.values

x_train, x_test, y_train, y_test = train_test_split(xv, yv, test_size=0.8, random_state=2019)

my_tree = DecisionTreeClassifier(max_depth = 100)
fig = my_tree.fit(x_train,y_train)

def my_prediction(an_array):
    prediction = my_model.predict(an_array)
    name = class_names[prediction]
    return name